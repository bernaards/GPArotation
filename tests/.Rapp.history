L <- loadings(factanal(factors = 2, covmat=ability.cov))
L
v <- oblimin(L, eps=1e-8)$loadings
library(GPArotation)
oblimin(L, eps=1e-8)$loadings
equamax(L, eps=1e-8)$loadings
parsimax(L, eps=1e-8)$loadings
varimin(L, eps=1e-8)$loadings
data(Harman, package="GPArotation")
factanal(Harman8, factors=2)
oblimax(Harman8)
data(Harman, package= "GPArotation")#
   v <- oblimax(Harman8, eps=1e-5)#
  tst <- t(matrix(c(#
  		0.93395421734409445058, -0.0302013026726007383,#
		0.99243032312927881300, -0.1121899246869615951,#
		0.96509469978483286567, -0.1322258547171115683,#
		0.91647702431117861188, -0.0502569243958834178,#
		0.08441855308346873921,  0.8875309317276611765,#
		0.04427084251510177149,  0.7907585046311147448,#
		0.00332736511424391868,  0.7399752420126202157,#
		0.14133359391312094733,  0.6483050831171799366#
	  ), 2, 8))#
  if( fuzz < max(abs(v - tst))) {#
    cat("Calculated value is not the same as test value in test rotations 22. Value:\n")#
    print(v, digits=18)#
    cat("difference:\n")#
    print(v - tst, digits=18)#
    all.ok <- FALSE  #
    }
fuzz <- 1e-6 #
all.ok <- TRUE
data(Harman, package= "GPArotation")#
   v <- oblimax(Harman8, eps=1e-5)#
  tst <- t(matrix(c(#
  		0.93395421734409445058, -0.0302013026726007383,#
		0.99243032312927881300, -0.1121899246869615951,#
		0.96509469978483286567, -0.1322258547171115683,#
		0.91647702431117861188, -0.0502569243958834178,#
		0.08441855308346873921,  0.8875309317276611765,#
		0.04427084251510177149,  0.7907585046311147448,#
		0.00332736511424391868,  0.7399752420126202157,#
		0.14133359391312094733,  0.6483050831171799366#
	  ), 2, 8))#
  if( fuzz < max(abs(v - tst))) {#
    cat("Calculated value is not the same as test value in test rotations 22. Value:\n")#
    print(v, digits=18)#
    cat("difference:\n")#
    print(v - tst, digits=18)#
    all.ok <- FALSE  #
    }
v <- oblimax(Harman8, eps=1e-5)$loadings#
  tst <- t(matrix(c(#
  		0.93395421734409445058, -0.0302013026726007383,#
		0.99243032312927881300, -0.1121899246869615951,#
		0.96509469978483286567, -0.1322258547171115683,#
		0.91647702431117861188, -0.0502569243958834178,#
		0.08441855308346873921,  0.8875309317276611765,#
		0.04427084251510177149,  0.7907585046311147448,#
		0.00332736511424391868,  0.7399752420126202157,#
		0.14133359391312094733,  0.6483050831171799366#
	  ), 2, 8))#
  if( fuzz < max(abs(v - tst))) {#
    cat("Calculated value is not the same as test value in test rotations 22. Value:\n")#
    print(v, digits=18)#
    cat("difference:\n")#
    print(v - tst, digits=18)#
    all.ok <- FALSE  #
    }
ability.cov
Thurstone33
Thurstone.33
Thurstone.33G
library(psych)
Thurstone.33G
Thurstone.33
equamax(box26)
data(Thurstone, package="GPArotation")
equamax(box26)
parsimax(box26)
data(Thurstone)#
  v <- equamax(Harman8, eps=1e-5)$loadings#
  tst <- t(matrix(c(#
	0.511813618717971597,  0.1252460667724786814,  0.835031881099661200,#
	0.211275278125612587,  0.9469860693462274215,  0.024701038786419674,#
	0.923671387190205140,  0.1861505968810791833, -0.278366886980007111,#
	0.414270797796799317,  0.7243752493532077397,  0.530526346393166759,#
	0.927099794400001564,  0.1710560637343615797,  0.314400690653154735,#
	0.685509679739711331,  0.6873945075387188908, -0.212674093365320949,#
	0.500975325417812756,  0.4985944480056956341,  0.693100497576226382,#
	0.350251174602310256,  0.8631423492204841619,  0.303299191676876356,#
	0.809196181501955492,  0.1468111894018074293,  0.540855816747015439,#
	1.051940508364259674,  0.2023337382785123650,  0.126016765617061266,#
	0.528246625368315792,  0.8145581663496035407, -0.154555803579673606,#
	0.791784749686200273,  0.5353191515116044741, -0.254010464723911089,#
	0.283760830721282831, -0.7132278971933163625,  0.633221728633476699,#
    -0.283760830721282831,  0.7132278971933163625, -0.633221728633476699,#
    -0.351981708826951678,  0.0145585781278812498,  0.920862598031950474,#
	0.351981708826951678, -0.0145585781278812498, -0.920862598031950474,#
    -0.641238077659381234,  0.7340358583767647715,  0.211813801195267382,#
	0.641238077659381234, -0.7340358583767647715, -0.211813801195267382,#
	0.370916272566192251,  0.7781992933002486179,  0.457012011497068604,#
	0.943267697340363864,  0.1458935486092693412,  0.269085717994103968,#
	0.683769139477491628,  0.6932804480935084168, -0.193612975261152009,#
	0.375506314902942506,  0.7683789003013250518,  0.444462454027040654,#
	0.921697465732450816,  0.1542330203892136042,  0.244709944799956780,#
	0.664806997738585315,  0.6918110118942031317, -0.165931249557543792,#
	0.748952844572093657,  0.5985308972371030656,  0.239842451746804020,#
	0.716556890444816297,  0.6343221919993241587,  0.139425892477791219#
   ), 3, 26))#
  if( fuzz < max(abs(v - tst))) {#
    cat("Calculated value is not the same as test value in test rotations 22. Value:\n")#
    print(v, digits=18)#
    cat("difference:\n")#
    print(v - tst, digits=18)#
    all.ok <- FALSE  #
    }
tst
v
data(Thurstone)#
  v <- equamax(box26, eps=1e-5)$loadings#
  tst <- t(matrix(c(#
	0.511813618717971597,  0.1252460667724786814,  0.835031881099661200,#
	0.211275278125612587,  0.9469860693462274215,  0.024701038786419674,#
	0.923671387190205140,  0.1861505968810791833, -0.278366886980007111,#
	0.414270797796799317,  0.7243752493532077397,  0.530526346393166759,#
	0.927099794400001564,  0.1710560637343615797,  0.314400690653154735,#
	0.685509679739711331,  0.6873945075387188908, -0.212674093365320949,#
	0.500975325417812756,  0.4985944480056956341,  0.693100497576226382,#
	0.350251174602310256,  0.8631423492204841619,  0.303299191676876356,#
	0.809196181501955492,  0.1468111894018074293,  0.540855816747015439,#
	1.051940508364259674,  0.2023337382785123650,  0.126016765617061266,#
	0.528246625368315792,  0.8145581663496035407, -0.154555803579673606,#
	0.791784749686200273,  0.5353191515116044741, -0.254010464723911089,#
	0.283760830721282831, -0.7132278971933163625,  0.633221728633476699,#
    -0.283760830721282831,  0.7132278971933163625, -0.633221728633476699,#
    -0.351981708826951678,  0.0145585781278812498,  0.920862598031950474,#
	0.351981708826951678, -0.0145585781278812498, -0.920862598031950474,#
    -0.641238077659381234,  0.7340358583767647715,  0.211813801195267382,#
	0.641238077659381234, -0.7340358583767647715, -0.211813801195267382,#
	0.370916272566192251,  0.7781992933002486179,  0.457012011497068604,#
	0.943267697340363864,  0.1458935486092693412,  0.269085717994103968,#
	0.683769139477491628,  0.6932804480935084168, -0.193612975261152009,#
	0.375506314902942506,  0.7683789003013250518,  0.444462454027040654,#
	0.921697465732450816,  0.1542330203892136042,  0.244709944799956780,#
	0.664806997738585315,  0.6918110118942031317, -0.165931249557543792,#
	0.748952844572093657,  0.5985308972371030656,  0.239842451746804020,#
	0.716556890444816297,  0.6343221919993241587,  0.139425892477791219#
   ), 3, 26))#
  if( fuzz < max(abs(v - tst))) {#
    cat("Calculated value is not the same as test value in test rotations 22. Value:\n")#
    print(v, digits=18)#
    cat("difference:\n")#
    print(v - tst, digits=18)#
    all.ok <- FALSE  #
    }
v <- cfT(box26, kappa = (3 / (2 * 26)), eps=1e-5)$loadings
v
if( fuzz < max(abs(v - tst))) {#
    cat("Calculated value is not the same as test value in test rotations 22. Value:\n")#
    print(v, digits=18)#
    cat("difference:\n")#
    print(v - tst, digits=18)#
    all.ok <- FALSE  #
    }
cfT
cfT(box26, kappa=( (3-1) / (26 + 3 -2) ), eps=1e-5)$loadings
v <- parsimax(box26, eps=1e-5)$loadings#
  tst <- t(matrix(c(  #
	0.7201835790622810318, -0.2820790149262949464,  0.6137467244615277817,#
    -0.0679423851913938670,  0.6010788795762025405,  0.7590243822315081434,#
	0.6707172136894012926,  0.7174085874409354968, -0.0277909684381195121,#
	0.3564975652920873705,  0.2169149780725644350,  0.8964682806594965747,#
	0.8905375652375422391,  0.2961288407436278303,  0.3269136806262873951,#
	0.3419238671745732927,  0.8395902605853544642,  0.4072361273101923196,#
	0.5551801796495600128,  0.0181442676741417341,  0.8193941381745735164,#
	0.1791815177720131602,  0.4232257028261393605,  0.8651329309165379788,#
	0.8735154515073240145,  0.0707778916688399651,  0.4481498031114935499,#
	0.9254209439635597834,  0.5018907196720771013,  0.2347334274887991901,#
	0.1871266535649374341,  0.7975561080494565358,  0.5434380093797205324,#
	0.4642991413806251688,  0.8329607560592182658,  0.2619421428072832847,#
	0.6793187635833454197, -0.7070938474525871875, -0.1694942722875707464,#
    -0.6793187635833454197,  0.7070938474525871875,  0.1694942722875707464,#
    	0.0126413340577520572, -0.7959999181796318934,  0.5816488003350992475,#
    -0.0126413340577520572,  0.7959999181796318934, -0.5816488003350992475,#
    -0.7005089039174136056, -0.0349340740508546910,  0.7091733821870598309,#
	0.7005089039174136056,  0.0349340740508546910, -0.7091733821870598309,#
	0.2764675266718980007,  0.2782887989292237019,  0.8933946782281918519,#
	0.8957285854821546156,  0.3212930506383097073,  0.2790825626255922787,#
	0.3455615085575033385,  0.8287155760723180498,  0.4236528505493507568,#
	0.2788032457489866833,  0.2837361452757249936,  0.8779069142135194070,#
	0.8654448252950356357,  0.3331277242202841382,  0.2706070467039994321,#
	0.3390107603224090660,  0.7999236919074760310,  0.4396564471388281214,#
	0.5855440811683275681,  0.5029973433114328651,  0.6171108503586539840,#
	0.5106729412991620753,  0.5782224406112924653,  0.5832066153589001711#
   ), 3, 26))#
  if( fuzz < max(abs(v - tst))) {#
    cat("Calculated value is not the same as test value in test rotations 22. Value:\n")#
    print(v, digits=18)#
    cat("difference:\n")#
    print(v - tst, digits=18)#
    all.ok <- FALSE  #
    }
cfT(box26, kappa=( (3-1) / (26 + 3 -2) ), eps=1e-5)
cfT(box26, kappa=( (1), eps=1e-5)
cfT(box26, kappa= (1), eps=1e-5)
equamax(box26, kappa= (1), eps=1e-5)
equamax(box26, eps=1e-5)
v <- parsimax(box26, eps=1e-5)$loadings#
  tst <- t(matrix(c(  #
	0.7201835790622810318, -0.2820790149262949464,  0.6137467244615277817,#
    -0.0679423851913938670,  0.6010788795762025405,  0.7590243822315081434,#
	0.6707172136894012926,  0.7174085874409354968, -0.0277909684381195121,#
	0.3564975652920873705,  0.2169149780725644350,  0.8964682806594965747,#
	0.8905375652375422391,  0.2961288407436278303,  0.3269136806262873951,#
	0.3419238671745732927,  0.8395902605853544642,  0.4072361273101923196,#
	0.5551801796495600128,  0.0181442676741417341,  0.8193941381745735164,#
	0.1791815177720131602,  0.4232257028261393605,  0.8651329309165379788,#
	0.8735154515073240145,  0.0707778916688399651,  0.4481498031114935499,#
	0.9254209439635597834,  0.5018907196720771013,  0.2347334274887991901,#
	0.1871266535649374341,  0.7975561080494565358,  0.5434380093797205324,#
	0.4642991413806251688,  0.8329607560592182658,  0.2619421428072832847,#
	0.6793187635833454197, -0.7070938474525871875, -0.1694942722875707464,#
    -0.6793187635833454197,  0.7070938474525871875,  0.1694942722875707464,#
    	0.0126413340577520572, -0.7959999181796318934,  0.5816488003350992475,#
    -0.0126413340577520572,  0.7959999181796318934, -0.5816488003350992475,#
    -0.7005089039174136056, -0.0349340740508546910,  0.7091733821870598309,#
	0.7005089039174136056,  0.0349340740508546910, -0.7091733821870598309,#
	0.2764675266718980007,  0.2782887989292237019,  0.8933946782281918519,#
	0.8957285854821546156,  0.3212930506383097073,  0.2790825626255922787,#
	0.3455615085575033385,  0.8287155760723180498,  0.4236528505493507568,#
	0.2788032457489866833,  0.2837361452757249936,  0.8779069142135194070,#
	0.8654448252950356357,  0.3331277242202841382,  0.2706070467039994321,#
	0.3390107603224090660,  0.7999236919074760310,  0.4396564471388281214,#
	0.5855440811683275681,  0.5029973433114328651,  0.6171108503586539840,#
	0.5106729412991620753,  0.5782224406112924653,  0.5832066153589001711#
   ), 3, 26))#
  if( fuzz < max(abs(v - tst))) {#
    cat("Calculated value is not the same as test value in test rotations 22. Value:\n")#
    print(v, digits=18)#
    cat("difference:\n")#
    print(v - tst, digits=18)#
    all.ok <- FALSE  #
    }    #
 ### SAME FOR CRAWFORD FERGUSON WITH KAPPA = m / (2 * p) = 3 / (2 * 26) #
  v <- cfT(box26, kappa=( (3-1) / (26 + 3 -2) ), eps=1e-5)$loadings#
  if( fuzz < max(abs(v - tst))) {#
    cat("Calculated value is not the same as test value in test rotations 22. Value:\n")#
    print(v, digits=18)#
    cat("difference:\n")#
    print(v - tst, digits=18)#
    all.ok <- FALSE  #
    }
varimin(Harman8)
data(Harman, package= "GPArotation")#
   v <- varimin(Harman8, eps=1e-5)$loadings#
  tst <- t(matrix(c(#
#
	0.800626657046876855, -0.452452158825595752,#
	0.783606930490612252, -0.524447498313301397,#
	0.742635936060292656, -0.522609669324872517,#
	0.768357486963803682, -0.455227165519225097,#
	0.818696625686402668,  0.444445536696790211,#
	0.702064973637186673,  0.410429985249392060,#
	0.623283524595303340,  0.401857745935120247,#
	0.668480210595655877, 0.287458184858228272#
	  ), 2, 8))#
  if( fuzz < max(abs(v - tst))) {#
    cat("Calculated value is not the same as test value in test rotations 22. Value:\n")#
    print(v, digits=18)#
    cat("difference:\n")#
    print(v - tst, digits=18)#
    all.ok <- FALSE  #
    }
citation("GPArotation")
y <- factanal(factors=3, covmat=ability.cov, rotation = "none")#
 y.quart <- quartimax(y$loadings)#
max(abs(y.quart$loadings %*% t(y.quart$Th) - unclass(y$loadings)))#
y.obli <- oblimin(y$loadings, normalize=TRUE, randomStarts=15)#
max(abs(y.obli$loadings %*% t(y.obli$Th) - unclass(y$loadings)))
factanal(factors=3, covmat=ability.cov, rotation = "oblimin")
oblimin(y$loadings)
factanal(factors=3, covmat=ability.cov, rotation = "quartimax")
factanal(factors=3, covmat=ability.cov, rotation = "quartimin")
factanal(factors=3, covmat=ability.cov, rotation = "geominQ")
geominQ(y$loadings)
y <- factanal(factors=3, covmat=ability.cov, rotation = "none")#
y.obli <- oblimin(y$loadings, normalize=TRUE, randomStarts=15)#
max(abs(y.obli$Phi  - t(y.obli$Th) %*% y.obli$Th))
y <- factanal(factors=3, covmat=ability.cov, rotation = "none", randomStarts=15)#
y.obli <- oblimin(y$loadings, normalize=TRUE, randomStarts=15)#
max(abs(y.obli$Phi  - t(y.obli$Th) %*% y.obli$Th))
y <- factanal(factors=3, covmat=ability.cov, rotation = "none", randomStarts=15)#
y.obli <- oblimin(y$loadings, normalize=TRUE, randomStarts=15)#
max(abs(y.obli$Phi  - t(y.obli$Th) %*% y.obli$Th))
y <- factanal(factors=3, covmat=ability.cov, rotation = "none", randomStarts=15)#
y.obli <- oblimin(y$loadings, normalize=TRUE, randomStarts=15)#
max(abs(y.obli$Phi  - t(y.obli$Th) %*% y.obli$Th))
detach("package:GPArotation", unload=TRUE)#
install.packages("/Users/coen/Documents/Personal Research/cran/GPArotation_2022.11-1.tar.gz")#
library(GPArotation)
q()
